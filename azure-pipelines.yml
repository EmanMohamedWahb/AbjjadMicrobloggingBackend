trigger:
  branches:
    include:
      - main
      - develop

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:
# 1. Checkout the code
- task: Checkout@1

# 2. Setup .NET Core SDK
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.0'
    installationPath: $(Agent.ToolsDirectory)/dotnet

# 3. Restore NuGet dependencies
- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'

# 4. Build the solution
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

# 5. Run tests
- task: DotNetCoreCLI@2
  displayName: 'Run Tests'
  inputs:
    command: 'test'
    projects: '**/*AbjjadMicroblogging.UnitTests.csproj'
    arguments: '--configuration $(buildConfiguration) --no-build --collect:"XPlat Code Coverage"'
    
# 6. Publish Test Results
- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  inputs:
    testResultsFiles: '**/TestResults/*.trx'
    mergeTestResults: true

# 7. Publish Code Coverage (Optional)
- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage Results'
  inputs:
    codeCoverageTool: 'cobertura'
    summaryFileLocation: '**/coverage.cobertura.xml'